// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.8.2 DO NOT EDIT.
package api

// AllocatedPackage defines model for AllocatedPackage.
type AllocatedPackage struct {
	// Embedded struct due to allOf(#/components/schemas/Package)
	Package `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	// Unique ID for the allocated package
	PackageId *string `json:"package_id,omitempty"`
}

// Represents an error
type Error struct {
	// A human-readable explanation specific to this occurrence of the problem. Like title, this fieldâ€™s value can be localized.
	Description *string `json:"description,omitempty"`

	// The HTTP status code applicable to this problem, expressed as a string value.
	Status *string `json:"status,omitempty"`

	// A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
	Title *string `json:"title,omitempty"`
}

// Represents a package to be loaded onto the ship
type Package struct {
	// The size of the package in package units
	Size int `json:"size"`
}

// Represents the current state of the ships cargo bay. All fields are represented in package units.
type Ship struct {
	// The amount of allocated, but unloaded, package units
	Allocated *int `json:"allocated,omitempty"`

	// The available space for packages, determined by the total capacity, loaded and allocated packages
	Available *int `json:"available,omitempty"`

	// The total capacity of the cargo bay
	Capacity *int `json:"capacity,omitempty"`

	// The number of loaded package units
	Loaded *int `json:"loaded,omitempty"`
}

// AllocatePackage defines model for AllocatePackage.
type AllocatePackage struct {
	// Represents a package allocated in the ship cargo bay
	Data *AllocatedPackage `json:"data,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Errors *[]Error `json:"errors,omitempty"`
}

// ShipStatus defines model for ShipStatus.
type ShipStatus struct {
	// Represents the current state of the ships cargo bay. All fields are represented in package units.
	Data *Ship `json:"data,omitempty"`
}

// PackageAllocateJSONBody defines parameters for PackageAllocate.
type PackageAllocateJSONBody Package

// PackageAllocateJSONRequestBody defines body for PackageAllocate for application/json ContentType.
type PackageAllocateJSONRequestBody PackageAllocateJSONBody
